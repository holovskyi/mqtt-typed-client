use mqtt_typed_client_macros::mqtt_topic_subscriber;
use mqtt_typed_client::message_serializer::BincodeSerializer;
use mqtt_typed_client::client::async_client::MqttClient;
use std::num::NonZeroUsize;
use std::sync::Arc;

#[derive(Debug)]
#[mqtt_topic_subscriber("sensors/{sensor_id}/temperature")]
struct TemperatureReading {
    sensor_id: u32,
    payload: Vec<u8>,
    topic: Arc<mqtt_typed_client::topic::topic_match::TopicMatch>,
}


#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    println!("üöÄ Testing full MQTT macro integration...");
    
    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –∫–æ–¥
    println!("üìã Topic pattern: {}", TemperatureReading::TOPIC_PATTERN);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É

    
    // –¢–µ–ø–µ—Ä —Å–ø—Ä–æ–±—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ MQTT (—Ü–µ –º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –±–µ–∑ —Å–ø—Ä–∞–≤–∂–Ω—å–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞)
    println!("üîå Attempting MQTT connection...");
    
    // –£–í–ê–ì–ê: –¶–µ –ø–æ—Ç—Ä–µ–±—É—î —Å–ø—Ä–∞–≤–∂–Ω—å–æ–≥–æ MQTT –±—Ä–æ–∫–µ—Ä–∞!
    // –ü–æ–∫–∏ —â–æ —Ç—ñ–ª—å–∫–∏ –ø–æ–∫–∞–∑—É—î–º–æ —â–æ –º–µ—Ç–æ–¥ —ñ—Å–Ω—É—î
    match MqttClient::<BincodeSerializer>::new(
        "mqtt://broker.mqtt.cool:1883?client_id=test_client", 
        NonZeroUsize::new(100).unwrap(),
        10,
        10
    ).await {
        Ok((client, _connection)) => {
            println!("‚úÖ MQTT client created successfully!");
            
            // –¢–µ–ø–µ—Ä –º–æ–∂–µ–º–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è
            match TemperatureReading::subscribe(&client).await {
                Ok(subscriber) => {
                    println!("üéâ Successfully subscribed using macro-generated method!");
                    // subscriber —Ç–µ–ø–µ—Ä –≥–æ—Ç–æ–≤–∏–π –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                }
                Err(e) => {
                    println!("‚ùå Subscription failed: {}", e);
                }
            }
        }
        Err(e) => {
            println!("‚ùå MQTT connection failed (expected without broker): {}", e);
            println!("‚úÖ But macro compilation successful!");
        }
    }
    
    Ok(())
}